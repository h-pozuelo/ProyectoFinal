@page "/login"
@using ClassLibrary.DataTransferObjects
@using Client.Services
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<h3>Iniciar Sesión</h3>

@if (showErrors)
{
    <div class="alert alert-danger" role="alert">
        <p>@error</p>
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Rellena el formulario.</h5>
        <EditForm Model="loginModel" OnValidSubmit="HandleLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="email">Correo</label>
                <InputText id="email" class="form-control" @bind-Value="loginModel.Email" />
                <ValidationMessage For="@(() => loginModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Contraseña</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="loginModel.Password" />
                <ValidationMessage For="@(() => loginModel.Password)" />
            </div>
            <hr />
            <div class="text-end">
                <button type="submit" class="btn btn-primary">Enviar</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private UserForAuthenticationDto loginModel = new UserForAuthenticationDto();
    private bool showErrors;
    private string error = "";

    private async Task HandleLogin()
    {
        showErrors = false;

        var result = await AuthenticationService.Login(loginModel);

        if (result.IsAuthenticationSuccessful) NavigationManager.NavigateTo("/");

        error = result.ErrorMessage!;
        showErrors = true;
    }
}
