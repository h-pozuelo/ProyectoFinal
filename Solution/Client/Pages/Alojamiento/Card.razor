@using Shared.DataTransferObjects
@using Client.Services
@using Shared.Services
@inject ImagesService ImagesService
@inject IAlquilerService AlquilerService


<div class="row mb-4 border rounded p-3">
    <div class="col-md-4">
        <img src="@(image == "" ? "https://img.freepik.com/vector-gratis/dibujo-casa-aislada_23-2147502091.jpg?size=626&ext=jpg" : image)"
             alt="Imagen del alojamiento" class="img-fluid rounded" />
    </div>
    <div class="col-md-8">
        <h4>@alojamiento.Titulo</h4>
        <hr />
        <p><strong>Fecha de Publicación:</strong> @alojamiento.FechaPublicacion.ToShortDateString()</p>
        <p><strong>Numero de Habitaciones:</strong> @alojamiento.NumeroHabitaciones</p>
        <p><strong>Capacidad de Invitados:</strong> @alojamiento.CapacidadInvitados</p>
        <p><strong>Precio por Noche:</strong> @alojamiento.PrecioNoche €</p>
        <p><strong>Comunidad Autónoma:</strong> @alojamiento.NombreComunidad</p>
        <p><strong>Descripción:</strong> @alojamiento.Descripcion</p>
        @if (idUsuario != null && idUsuario != "")
        {
            <p class="card-text"><small class="text-background-secondary">@count @(count == 1 ? "vez" : "veces") alquilada.</small></p>
        }
    </div>
</div>

@code {
    [Parameter]
    public AlojamientoDto alojamiento { get; set; } = new AlojamientoDto();
    private string image = "";

    [Parameter]
    public string? idUsuario { get; set; }

    private int count = 0;

    protected override async Task OnInitializedAsync()
    {
        var result = await ImagesService.GetImages("alojamientos", alojamiento.Id.ToString());

        if (result.IsSuccessful && !(result.Element == null || result.Element.Count() == 0))
        {
            image = result.Element.First();
        }

        if (idUsuario != null && idUsuario != "") count = await countAlquileres(alojamiento.Id);
    }

    private async Task<int> countAlquileres(int idAlojamiento)
    {
        var result = await AlquilerService.GetAlquileresByAlojamiento(idAlojamiento);

        if (result != null) return result.Count();

        return 0;
    }
}
