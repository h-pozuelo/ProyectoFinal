@page "/listalojamientosbyuser"
@using Shared.DataTransferObjects
@using Shared.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject IAlojamientoService alojamientoService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider StateProvider
@inject IAlquilerService alquilerService



<div class="d-flex justify-content-between">
    <h3>ListAlojamientoByUser</h3>
    <a href="/createorupdatealojamiento" class="btn btn-primary">Crear alojamiento</a>
</div>

@if (alojamientos == null)
{
    <p>Cargando alojamientos...</p>
}
else if (!alojamientos.Any())
{
    <p>No hay alojamientos disponibles.</p>
}
else
{
    <div class="container mt-4">
        @foreach (var alojamiento in alojamientos)
        {
            <div class="border-2">
                <NavLink href="@($"/createorupdatealojamiento/{alojamiento.Id}")"
                         style="color: inherit; text-decoration: none;">
                    <Card alojamiento="alojamiento" idUsuario="idUsuario" />
                </NavLink>
                <NavLink href="@($"/alquilerByAlojamiento/{alojamiento.Id}")"
                         class="btn btn-primary">Ver Alquileres</NavLink>
            </div>
        }
    </div>
}

@code {
    private IEnumerable<AlojamientoDto> alojamientos;
    private string idUsuario = "";


    protected override async Task OnInitializedAsync()
    {
        idUsuario = (await StateProvider.GetAuthenticationStateAsync()).User.FindFirst("Id")!.Value;

        alojamientos = await alojamientoService.GetAlojamientosByUser(idUsuario);
    }
}
