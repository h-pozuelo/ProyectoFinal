@page "/listalojamientosbyuser"
@using Shared.DataTransferObjects
@using Shared.Services
@using Microsoft.AspNetCore.Components.Authorization
@inject IAlojamientoService alojamientoService
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider StateProvider
@inject IAlquilerService alquilerService



<div class="card mb-3">
    <div class="card-body">
        <div class="d-flex justify-content-between">
            <h3>Mis Alojamientos</h3>
            <a href="/createorupdatealojamiento" class="btn btn-outline-primary"><i class="bi bi-house-add"></i> Crear alojamiento</a>
        </div>

        <hr />

        @if (alojamientos == null)
        {
            <div class="alert alert-info" role="alert">
                <p>Cargando alojamientos...</p>
            </div>
        }
        else if (!alojamientos.Any())
        {
            <div class="alert alert-warning" role="alert">
                <p>No hay alojamientos disponibles.</p>
            </div>
        }
        else
        {
            @foreach (var alojamiento in alojamientos)
            {
                <Card alojamiento="alojamiento" idUsuario="idUsuario" url="@($"/createorupdatealojamiento/{alojamiento.Id}")" />
            }
        }
    </div>
</div>

@code {
    private IEnumerable<AlojamientoDto> alojamientos;
    private string idUsuario = "";


    protected override async Task OnInitializedAsync()
    {
        idUsuario = (await StateProvider.GetAuthenticationStateAsync()).User.FindFirst("Id")!.Value;

        alojamientos = await alojamientoService.GetAlojamientosByUser(idUsuario);
    }
}
