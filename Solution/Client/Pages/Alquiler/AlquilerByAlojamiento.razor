@page "/alquilerByAlojamiento/{id:int}"
@using Shared.Services
@using Microsoft.AspNetCore.Components.Authorization
@using Shared.DataTransferObjects
@inject NavigationManager navigationManager
@inject AuthenticationStateProvider StateProvider
@inject IAlquilerService alquilerService

<div class="card mb-3">
    <div class="card-body">
        <h3 class="card-title">Alquileres</h3>

        <hr />

        @if (!(Alquileres == null || Alquileres.Count() == 0))
        {
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>Inquilino</th>
                        <th>Fecha de Inicio</th>
                        <th>Fecha de Fin</th>
                        <th>Precio Total</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var alquiler in Alquileres)
                    {
                        <Fila alquiler="alquiler" />
                    }
                    <tr>
                        <td colspan="4" style="background-color:khaki" class="text-end">Ganancia Total de este alojamiento: @TotalPrecioAlquileres €</td>
                    </tr>
                </tbody>
            </table>
        }
        else
        {
            <div class="alert alert-warning">
                <p>No hay alquileres para este alojamiento</p>
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public int id { get; set; }
    private string idUsuario = "";
    private IEnumerable<AlquilerDto> Alquileres = new List<AlquilerDto>();
    private double TotalPrecioAlquileres = 0;



    protected override async Task OnInitializedAsync()
    {
        idUsuario = (await StateProvider.GetAuthenticationStateAsync()).User.FindFirst("Id")!.Value;

        Alquileres = await alquilerService.GetAlquileresByAlojamiento(id);

        TotalPrecioAlquileres = Alquileres.Sum(a => a.PrecioTotal);

    }

}