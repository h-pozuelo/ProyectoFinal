@page "/register"
@using Shared.DataTransferObjects
@using Client.Services
@inject IAuthenticationService AuthenticationService
@inject NavigationManager NavigationManager

<h3>Registrarse</h3>

@if (showErrors)
{
    <div class="alert alert-danger" role="alert">
        @foreach (var error in errors!)
        {
            <p>@error</p>
        }
    </div>
}

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Rellena el formulario.</h5>
        <EditForm Model="registerModel" OnValidSubmit="HandleRegistration">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="form-group">
                <label for="nombreCompleto">Nombre Completo</label>
                <InputText id="nombreCompleto" class="form-control" @bind-Value="registerModel.FullName" />
                <ValidationMessage For="@(() => registerModel.FullName)" />
            </div>
            <div class="form-group">
                <label for="email">Correo</label>
                <InputText id="email" class="form-control" @bind-Value="registerModel.Email" />
                <ValidationMessage For="@(() => registerModel.Email)" />
            </div>
            <div class="form-group">
                <label for="password">Contraseña</label>
                <InputText id="password" type="password" class="form-control" @bind-Value="registerModel.Password" />
                <ValidationMessage For="@(() => registerModel.Password)" />
            </div>
            <div class="form-group">
                <label for="confirmPassword">Confirmar Contraseña</label>
                <InputText id="confirmPassword" type="password" class="form-control" @bind-Value="registerModel.ConfirmPassword" />
                <ValidationMessage For="@(() => registerModel.ConfirmPassword)" />
            </div>
            <hr />
            <div class="text-end">
                <button type="submit" class="btn btn-outline-primary">Enviar</button>
            </div>
        </EditForm>
    </div>
</div>

@code {
    private UserForRegistrationDto registerModel = new UserForRegistrationDto();
    private bool showErrors;
    private IEnumerable<string>? errors;

    private async Task HandleRegistration()
    {
        showErrors = false;

        var result = await AuthenticationService.Register(registerModel);

        if (result.IsSuccessfulRegistration) NavigationManager.NavigateTo("/login");

        errors = result.Errors;
        showErrors = true;
    }
}
